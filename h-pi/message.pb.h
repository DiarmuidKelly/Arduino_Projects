/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Packet { 
    pb_callback_t measurement; 
    pb_callback_t tags; 
    pb_callback_t cur_time; 
    pb_callback_t fields; 
} Packet;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Packet_init_default                      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Packet_init_zero                         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Packet_measurement_tag                   1
#define Packet_tags_tag                          2
#define Packet_cur_time_tag                      3
#define Packet_fields_tag                        4

/* Struct field encoding specification for nanopb */
#define Packet_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   measurement,       1) \
X(a, CALLBACK, REPEATED, STRING,   tags,              2) \
X(a, CALLBACK, SINGULAR, STRING,   cur_time,          3) \
X(a, CALLBACK, REPEATED, STRING,   fields,            4)
#define Packet_CALLBACK pb_default_field_callback
#define Packet_DEFAULT NULL

extern const pb_msgdesc_t Packet_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Packet_fields &Packet_msg

/* Maximum encoded size of messages (where known) */
/* Packet_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
